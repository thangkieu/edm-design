{"version":3,"sources":["app/appconfig.ts","services/themes.ts","components/CommonStyles.tsx","components/Header/Header.tsx","components/Layout/Footer.tsx","components/Layout/Basic.tsx","components/Profile.tsx","pages/HomePage.tsx"],"names":["appconfig","title","subTitle","footnote","getAllThemes","a","apiHelpers","clientGet","edmThemes","getThemeConfig","themeName","themeConfig","saveCurentDesign","saveFn","params","screenshot","DomToImage","toPng","document","getElementById","console","debug","Container","styled","div","HeaderContent","LogoStyle","Link","Header","memo","props","to","Title","level","style","margin","lineHeight","Text","type","actions","Footer","className","textAlign","ContainerOverride","LayoutBasic","isMinFullHeight","minHeight","undefined","padding","Content","children","hideFooter","Profile","history","useHistory","logout","useResetRecoilState","logoutSelector","handleLogout","useCallback","push","menu","useMemo","Item","onClick","overlay","placement","arrow","shape","icon","Box","p","theme","spacing","md","sm","colors","border","BoxLabel","Typography","Row","Heading","UploadBox","Upload","Dragger","HomePage","themes","useRecoilValue","edmThemeListSelector","applyDesign","useSetRecoilState","replaceByDesignConfigSelector","loadThemeConfig","useRecoilCallback","set","paramDesignConfig","isLoadingState","designConfig","DefaultDesignConfig","id","uuidv4","currentEdmThemeNameState","currentDesignNameState","name","availModuleListFamilyState","modules","handleSelect","e","currentTarget","querySelector","contains","target","stopPropagation","dataset","handleUpload","info","loadFile","file","result","JSON","parse","notify","error","handleDrop","dataTransfer","files","multiple","onDrop","onChange","showUploadList","beforeUpload","preventUpload","marginBottom","map","src","thumbnail","alt","HomePagePrefetch","prefetch","edmThemeListState","useEffect"],"mappings":"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","file":"static/js/9.d8c094bc.chunk.js","sourcesContent":["export const appconfig = {\n  title: 'EDM Composer',\n  subTitle: 'Generate a customised EDM design',\n  footnote: 'Â©Created by Data Science & AI Division, GovTech',\n};\n","import DomToImage from 'dom-to-image';\nimport { SetterOrUpdater } from 'recoil';\nimport { apiHelpers } from './api';\n\nexport async function getAllThemes() {\n  const edmThemes: EdmDesignConfig[] = await apiHelpers.clientGet('/themes/edm-themes.json');\n\n  return edmThemes;\n}\n\nexport async function getThemeConfig(themeName: string): Promise<EdmDesignConfig> {\n  const themeConfig: EdmDesignConfig = await apiHelpers.clientGet(`/themes/${themeName}/data.json`);\n\n  return themeConfig;\n}\n\nexport async function saveCurentDesign(\n  saveFn: SetterOrUpdater<{ htmlFileKey?: string; screenshot?: string } | null | undefined>,\n  params?: { htmlFileKey?: string }\n) {\n  let screenshot = '';\n\n  try {\n    screenshot = await DomToImage.toPng(document.getElementById('edm-design-renderer') as any);\n  } catch (err) {\n    console.debug(err);\n  }\n\n  saveFn({ screenshot, ...(params ? params : {}) });\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 1rem 1rem;\n  max-width: 1084px;\n  margin: auto;\n  width: 100%;\n\n  .ant-layout-has-sider {\n    height: 100%;\n  }\n`;\n\nexport const FormField = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nexport const LoadingWrapper = styled.div`\n  display: flex;\n  margin-top: 3em;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n","import { appconfig } from '@app/appconfig';\nimport { Typography } from '@uikits';\nimport React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Container } from '../CommonStyles';\n\ninterface HeaderProps {\n  actions?: React.ReactNode;\n}\n\nconst HeaderContent = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 0;\n  padding-bottom: 0;\n  line-height: 1;\n`;\n\nconst LogoStyle = styled(Link)`\n  color: white;\n  text-decoration: none;\n`;\n\nexport const Header = memo<HeaderProps>((props) => {\n  return (\n    <HeaderContent>\n      <LogoStyle to=\"/\">\n        <Typography.Title level={3} style={{ margin: 0, lineHeight: 1 }}>\n          {appconfig.title}\n        </Typography.Title>\n        <Typography.Text type=\"secondary\">\n          <small>{appconfig.subTitle}</small>\n        </Typography.Text>\n      </LogoStyle>\n      {props.actions}\n    </HeaderContent>\n  );\n});\n","import { appconfig } from '@app/appconfig';\nimport { Layout } from '@components/UIKits';\nimport { memo } from 'react';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nexport const Footer = memo<HeaderProps>((props) => {\n  return (\n    <Layout.Footer className={props.className} style={{ textAlign: 'center' }}>\n      {appconfig.footnote}\n    </Layout.Footer>\n  );\n});\n","import { Header } from '@components/Header';\nimport { Layout } from '@uikits';\nimport React, { FC, memo } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../CommonStyles';\nimport { Footer } from './Footer';\n\nconst ContainerOverride = styled(Container)`\n  height: 100%;\n  overflow: hidden;\n`;\n\ninterface LayoutProps {\n  className?: string;\n  actions?: React.ReactNode;\n  isMinFullHeight?: boolean;\n  hideFooter?: boolean;\n}\n\nexport const LayoutBasic: FC<LayoutProps> = memo((props) => {\n  return (\n    <Layout\n      className={props.className}\n      style={props.isMinFullHeight ? { minHeight: '100vh' } : undefined}\n    >\n      <Layout.Header style={{ padding: 0 }}>\n        <Header actions={props.actions} />\n      </Layout.Header>\n\n      <Layout.Content>\n        <ContainerOverride>{props.children}</ContainerOverride>\n      </Layout.Content>\n\n      {!props.hideFooter && <Footer />}\n    </Layout>\n  );\n});\n","import { logoutSelector } from '@recoil-atoms/selectors';\nimport { Button, Dropdown, Menu } from '@uikits';\nimport { memo, useCallback, useMemo } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useResetRecoilState } from 'recoil';\nimport { FileImageOutlined, LogoutOutlined, UserOutlined } from './Icons';\n\ninterface ProfileProps {\n  className?: string;\n}\n\nexport const Profile = memo<ProfileProps>((props) => {\n  const history = useHistory();\n  const logout = useResetRecoilState(logoutSelector);\n\n  const handleLogout = useCallback(() => {\n    logout();\n    history.push('/login');\n  }, [history, logout]);\n\n  const menu = useMemo(\n    () => (\n      <Menu>\n        <Menu.Item key=\"edm-composer\">\n          <Link to=\"/edm-composer\">\n            <FileImageOutlined /> EDM Composer\n          </Link>\n        </Menu.Item>\n        <Menu.Item onClick={handleLogout} key=\"logout\">\n          <LogoutOutlined /> Logout\n        </Menu.Item>\n      </Menu>\n    ),\n    [handleLogout]\n  );\n\n  return (\n    <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\n      <Button shape=\"circle\" icon={<UserOutlined />}></Button>\n    </Dropdown>\n  );\n});\n","import { DefaultDesignConfig } from '@app/constants';\nimport { CloudUploadOutlined } from '@components/Icons';\nimport { LayoutBasic } from '@components/Layout/Basic';\nimport { Profile } from '@components/Profile';\nimport {\n  availModuleListFamilyState,\n  currentDesignNameState,\n  currentEdmThemeNameState,\n  edmThemeListState,\n  isLoadingState,\n} from '@recoil-atoms/atoms';\nimport { edmThemeListSelector, replaceByDesignConfigSelector } from '@recoil-atoms/selectors';\nimport { getAllThemes, getThemeConfig } from '@services/themes';\nimport { Divider, Image, Typography, Upload } from '@uikits';\nimport { loadFile, preventUpload, uuidv4 } from '@utils/helpers';\nimport { notify } from '@utils/notification';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { memo, useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useRecoilCallback, useRecoilValue, useSetRecoilState } from 'recoil';\nimport styled from 'styled-components';\n\nconst Box = styled.div`\n  padding: ${(p) => p.theme.spacing.md};\n  margin: 0 calc(${(p) => p.theme.spacing.sm} / 2) ${(p) => p.theme.spacing.sm};\n  flex: 1 1 0%;\n  appearance: none;\n  background-color: white;\n  border: 1px solid ${(p) => p.theme.colors.border};\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    border-color: transparent;\n    box-shadow: 0 0 20px -10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst BoxLabel = styled(Typography.Title)`\n  margin-top: ${(p) => p.theme.spacing.sm};\n  && {\n    margin-bottom: 0;\n  }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: calc(-${(p) => p.theme.spacing.sm} / 2);\n  margin-right: calc(-${(p) => p.theme.spacing.sm} / 2);\n`;\n\nconst Heading = styled(Typography.Title)`\n  text-transform: uppercase;\n`;\n\nconst UploadBox = styled(Upload.Dragger)`\n  && {\n    background-color: white;\n  }\n`;\n\nconst HomePage = memo(() => {\n  const themes = useRecoilValue(edmThemeListSelector);\n  const history = useHistory();\n  const applyDesign = useSetRecoilState(replaceByDesignConfigSelector);\n\n  const loadThemeConfig = useRecoilCallback<[string, EdmDesignConfig?], Promise<void>>(\n    ({ set }) =>\n      async (themeName, paramDesignConfig) => {\n        set(isLoadingState, true);\n        const themeConfig: EdmDesignConfig = await getThemeConfig(themeName);\n\n        let designConfig: EdmDesignConfig = paramDesignConfig || {\n          ...DefaultDesignConfig,\n          id: uuidv4(),\n          themeName,\n        };\n\n        set(currentEdmThemeNameState, themeName);\n        set(currentDesignNameState, designConfig.name);\n\n        set(availModuleListFamilyState(themeName), themeConfig?.modules || []);\n        applyDesign(designConfig);\n\n        set(isLoadingState, false);\n\n        history.push('/edm-composer');\n      },\n    []\n  );\n\n  const handleSelect = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      if (e.currentTarget.querySelector('.ant-image')?.contains(e.target as any)) {\n        e.stopPropagation();\n        return;\n      }\n\n      const themeName = e.currentTarget.dataset.theme;\n      themeName && loadThemeConfig(themeName);\n    },\n    [loadThemeConfig]\n  );\n\n  const handleUpload = useCallback(\n    async (info: UploadChangeParam<UploadFile<File>>) => {\n      const result = await loadFile(info.file as any, 'text');\n      try {\n        const designConfig: EdmDesignConfig = JSON.parse(result);\n\n        if (!designConfig.themeName) {\n          notify.error('Invalid Config file');\n          return;\n        }\n\n        loadThemeConfig(designConfig.themeName, designConfig);\n      } catch (e) {\n        notify.error('Invalid Config file');\n      }\n    },\n    [loadThemeConfig]\n  );\n\n  const handleDrop = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      const file = e.dataTransfer.files[0];\n\n      if (!file) return;\n\n      handleUpload({ file } as any);\n    },\n    [handleUpload]\n  );\n\n  return (\n    <LayoutBasic isMinFullHeight actions={<Profile />}>\n      <br />\n      <Heading level={4}>Start With</Heading>\n      <UploadBox\n        multiple={false}\n        name=\"design\"\n        onDrop={handleDrop}\n        onChange={handleUpload}\n        showUploadList={false}\n        beforeUpload={preventUpload}\n      >\n        <p className=\"ant-upload-drag-icon\" style={{ marginBottom: '0.5rem' }}>\n          <CloudUploadOutlined />\n        </p>\n        <p className=\"ant-upload-text\">Upload existing design</p>\n      </UploadBox>\n\n      <Divider />\n\n      <Heading level={4}>Themes</Heading>\n      <Row>\n        {themes.map((theme) => (\n          <Box key={theme.id} data-theme={theme.name} onClick={handleSelect}>\n            <Image src={theme.thumbnail} alt={theme.name} />\n            <BoxLabel level={5}>{theme.name}</BoxLabel>\n          </Box>\n        ))}\n      </Row>\n    </LayoutBasic>\n  );\n});\n\nconst HomePagePrefetch = memo(() => {\n  // load data\n  const prefetch = useRecoilCallback(\n    ({ set }) =>\n      async () => {\n        set(isLoadingState, true);\n        const edmThemes: EdmDesignConfig[] = await getAllThemes();\n\n        set(edmThemeListState, edmThemes);\n\n        set(isLoadingState, false);\n      },\n    []\n  );\n\n  useEffect(() => {\n    prefetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <HomePage />;\n});\n\nexport default HomePagePrefetch;\n"],"sourceRoot":""}